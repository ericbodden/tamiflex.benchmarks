java.lang.RuntimeException: Caught exception in parsing: com.sun.org.apache.xerces.internal.impl.io.MalformedByteSequenceException: Invalid byte 1 of 1-byte UTF-8 sequence.
Iteration: 1000 Flow: 0.16627965860949334
Iteration: 2000 Flow: 0.14514701636102978
Iteration: 3000 Flow: 0.08553760676158917
Iteration: 4000 Flow: 0.052987953811337994
Iteration: 5000 Flow: 0.03731699451390763
Iteration: 6000 Flow: 0.02080815175275998
Iteration: 7000 Flow: 0.014285313254829374
Iteration: 8000 Flow: 0.008805245814146835
Iteration: 9000 Flow: 0.005812440329902176
Iteration: 10000 Flow: 0.0034087114741147635
Iteration: 11000 Flow: 0.0022346631071088596
Iteration: 12000 Flow: 0.0013428452717778293
===========================================================================
Missing entry points in rechenknecht.cased.de/jython-small/CallGraph-static.gxl.gz:
===========================================================================
0.0 java.util.jar.JarFile: <init>(Ljava/lang/String;)
===========================================================================
Missing call edges in rechenknecht.cased.de/jython-small/CallGraph-static.gxl.gz:
===========================================================================
0.0 org.python.core.PyType: setupProxy(Ljava/lang/Class;Ljava/util/List;) ===> java.lang.ClassLoader: loadClassInternal(Ljava/lang/String;)
0.003995980403694733 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.125 java.io.File: list() ===> java.io.UnixFileSystem: list(Ljava/io/File;)
0.22678697409893792 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.2343749999955 java.io.FileInputStream: open(Ljava/lang/String;) ===> java.io.FileNotFoundException: <init>(Ljava/lang/String;Ljava/lang/String;)
0.234374999995875 java.io.File: checkAndCreate(Ljava/lang/String;Ljava/lang/SecurityManager;) ===> java.io.UnixFileSystem: createFileExclusively(Ljava/lang/String;)
0.234374999998125 com.sun.jna.Function: invokeInt(I[Ljava/lang/Object;) ===> com.sun.jna.Native: updateLastError(I)
0.2343749999985 sun.net.www.protocol.jar.JarURLConnection: getUseCaches() ===> java.net.URLConnection: getUseCaches()
0.234374999999375 java.io.File: hashCode() ===> java.io.UnixFileSystem: hashCode(Ljava/io/File;)
0.2492403737054489 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.2572288513019082 java.lang.StringCoding$StringDecoder: charsetName() ===> sun.nio.cs.UTF_8: historicalName()
0.28131846353115675 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.3300781249927187 com.sun.jna.Native: initIDs() ===> com.sun.jna.Pointer: <init>(J)
0.3500752448810447 java.lang.StringCoding$StringEncoder: charsetName() ===> sun.nio.cs.UTF_8: historicalName()
0.37858053448297224 java.io.File: getCanonicalFile() ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.3896717424144748 java.io.File: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.4103269658542493 sun.net.www.protocol.jar.JarFileFactory: getPermission(Ljava/util/jar/JarFile;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.4138183593589141 java.io.File: lastModified() ===> java.io.UnixFileSystem: getLastModifiedTime(Ljava/io/File;)
0.43089777793241163 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.45473922006209316 java.net.URLClassLoader: getPermissions(Ljava/security/CodeSource;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.4684763940718099 java.io.File: <init>(Ljava/lang/String;Ljava/io/File;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.4714137646984425 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.4758683413589955 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.5422477868641695 java.io.File: getAbsolutePath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
0.5512046813511378 java.lang.Package: getPackages() ===> java.lang.ClassLoader: getPackages()
0.5553266106897734 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
0.5994475100030944 java.io.File: isFile() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.6073040961648953 java.lang.Class: getConstantPool() ===> sun.reflect.ConstantPool: <clinit>()
0.6189625708630636 java.io.File$LazyInitialization: temporaryDirectory() ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.6826744068352819 java.io.File: exists() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.715038824479099 java.io.File: isDirectory() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.769808870651681 java.lang.ref.Finalizer: runFinalizer() ===> java.lang.ref.Finalizer: hasBeenFinalized()
0.7698088706554851 java.lang.ref.Finalizer: runFinalizer() ===> java.lang.ref.Finalizer: remove()
0.896691297218054 java.nio.charset.CharsetEncoder: replaceWith([B) ===> sun.nio.cs.UTF_8$Encoder: isLegalReplacement([B)
0.8966912979218943 java.net.URLStreamHandler: sameFile(Ljava/net/URL;Ljava/net/URL;) ===> sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
0.9209042739048996 java.lang.ClassLoader$NativeLibrary: load(Ljava/lang/String;) ===> java.lang.ClassLoader$NativeLibrary: getFromClass()
0.9990352308646081 sun.reflect.NativeMethodAccessorImpl: invoke0(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;) ===> org.python.core.io.UniversalIOWrapper$Newline: values()
0.9990352308646804 sun.reflect.NativeMethodAccessorImpl: invoke0(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;) ===> org.python.core.FutureFeature: values()
0.9990352308704976 sun.reflect.NativeMethodAccessorImpl: invoke0(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;) ===> com.kenai.constantine.platform.linux.Errno: values()
0.999035230908035 sun.reflect.NativeMethodAccessorImpl: invoke0(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;) ===> org.python.core.util.importer$EntryType: values()
1.0014984081777636 java.util.LinkedHashMap: addEntry(ILjava/lang/Object;Ljava/lang/Object;I) ===> java.io.ExpiringCache$1: removeEldestEntry(Ljava/util/Map$Entry;)
1.474753522997407 java.lang.StringCoding$StringEncoder: <init>(Ljava/nio/charset/Charset;Ljava/lang/String;) ===> sun.nio.cs.UTF_8: newEncoder()
1.5195771393146553 sun.nio.cs.StreamEncoder: <init>(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;) ===> sun.nio.cs.UTF_8: newEncoder()
1.898599085854051 java.io.File: isAbsolute() ===> java.io.UnixFileSystem: isAbsolute(Ljava/io/File;)
2.3296755115311285 java.nio.charset.CharsetDecoder: decode(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z) ===> sun.nio.cs.UTF_8$Decoder: decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
2.9751296992291616 java.nio.charset.CharsetEncoder: encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z) ===> sun.nio.cs.UTF_8$Encoder: encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
2.9944039422271667 java.net.URL: <init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;) ===> sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
3.991382360832014 java.lang.Object: <init>() ===> java.lang.ref.Finalizer: register(Ljava/lang/Object;)
7.968748164354937 java.net.URL: openConnection() ===> sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
8.97923332050931 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
===========================================================================
Number of reachable methods missing in rechenknecht.cased.de/jython-small/CallGraph-static.gxl.gz: 73
===========================================================================
com.kenai.constantine.platform.linux.Errno: values()
com.sun.jna.Native: updateLastError(I)
com.sun.jna.Pointer: <init>(J)
java.io.ExpiringCache$1: removeEldestEntry(Ljava/util/Map$Entry;)
java.io.ExpiringCache$Entry: <init>(JLjava/lang/String;)
java.io.ExpiringCache$Entry: timestamp()
java.io.ExpiringCache$Entry: val()
java.io.ExpiringCache: access$000(Ljava/io/ExpiringCache;)
java.io.ExpiringCache: clear()
java.io.ExpiringCache: entryFor(Ljava/lang/String;)
java.io.ExpiringCache: get(Ljava/lang/String;)
java.io.ExpiringCache: put(Ljava/lang/String;Ljava/lang/String;)
java.io.File: getPrefixLength()
java.io.FileNotFoundException: <init>(Ljava/lang/String;Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize0(Ljava/lang/String;)
java.io.UnixFileSystem: compare(Ljava/io/File;Ljava/io/File;)
java.io.UnixFileSystem: createDirectory(Ljava/io/File;)
java.io.UnixFileSystem: createFileExclusively(Ljava/lang/String;)
java.io.UnixFileSystem: delete(Ljava/io/File;)
java.io.UnixFileSystem: delete0(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes0(Ljava/io/File;)
java.io.UnixFileSystem: getLastModifiedTime(Ljava/io/File;)
java.io.UnixFileSystem: getLength(Ljava/io/File;)
java.io.UnixFileSystem: hashCode(Ljava/io/File;)
java.io.UnixFileSystem: isAbsolute(Ljava/io/File;)
java.io.UnixFileSystem: list(Ljava/io/File;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;II)
java.io.UnixFileSystem: parentOrNull(Ljava/lang/String;)
java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
java.io.UnixFileSystem: resolve(Ljava/io/File;)
java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
java.lang.ClassLoader$NativeLibrary: getFromClass()
java.lang.ClassLoader: findLibrary(Ljava/lang/String;)
java.lang.ClassLoader: getPackages()
java.lang.ref.FinalReference: <init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)
java.lang.ref.Finalizer: <init>(Ljava/lang/Object;)
java.lang.ref.Finalizer: add()
java.lang.ref.Finalizer: register(Ljava/lang/Object;)
java.net.URL: getUserInfo()
java.net.URLConnection: getUseCaches()
java.net.URLStreamHandler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
org.python.core.FutureFeature: values()
org.python.core.io.UniversalIOWrapper$Newline: values()
org.python.core.util.importer$EntryType: values()
sun.net.www.MessageHeader: <init>()
sun.net.www.MessageHeader: grow()
sun.net.www.URLConnection: <init>(Ljava/net/URL;)
sun.net.www.protocol.file.FileURLConnection: <clinit>()
sun.net.www.protocol.file.FileURLConnection: <init>(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.FileURLConnection: getPermission()
sun.net.www.protocol.file.Handler: createFileURLConnection(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;Ljava/net/Proxy;)
sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
sun.nio.cs.UTF_8$Decoder: <init>(Ljava/nio/charset/Charset;)
sun.nio.cs.UTF_8$Decoder: <init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)
sun.nio.cs.UTF_8$Decoder: decodeArrayLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
sun.nio.cs.UTF_8$Decoder: decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
sun.nio.cs.UTF_8$Decoder: xflow(Ljava/nio/Buffer;IILjava/nio/Buffer;II)
sun.nio.cs.UTF_8$Encoder: <init>(Ljava/nio/charset/Charset;)
sun.nio.cs.UTF_8$Encoder: <init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)
sun.nio.cs.UTF_8$Encoder: encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
sun.nio.cs.UTF_8$Encoder: encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
sun.nio.cs.UTF_8$Encoder: isLegalReplacement([B)
sun.nio.cs.UTF_8: historicalName()
sun.nio.cs.UTF_8: newDecoder()
sun.nio.cs.UTF_8: newEncoder()
sun.nio.cs.UTF_8: updatePositions(Ljava/nio/Buffer;ILjava/nio/Buffer;I)
sun.reflect.ConstantPool: <clinit>()
