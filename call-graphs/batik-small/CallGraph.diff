java.lang.RuntimeException: Caught exception in parsing: com.sun.org.apache.xerces.internal.impl.io.MalformedByteSequenceException: Invalid byte 1 of 1-byte UTF-8 sequence.
Iteration: 1000 Flow: 0.17585873600366414
Iteration: 2000 Flow: 0.05261376767499393
Iteration: 3000 Flow: 0.01373370339074336
Iteration: 4000 Flow: 0.004022832458339405
Iteration: 5000 Flow: 0.0011326281933613808
===========================================================================
Missing entry points in rechenknecht.cased.de/batik-small/CallGraph-static.gxl.gz:
===========================================================================
0.0 java.util.jar.JarFile: <init>(Ljava/lang/String;)
===========================================================================
Missing call edges in rechenknecht.cased.de/batik-small/CallGraph-static.gxl.gz:
===========================================================================
0.0 org.apache.crimson.parser.AttributesExImpl: addAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z) ===> java.lang.ClassLoader: checkPackageAccess(Ljava/lang/Class;Ljava/security/ProtectionDomain;)
0.0375822251246911 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.04908698794347409 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.109375 java.net.URLClassLoader: getPermissions(Ljava/security/CodeSource;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.12021303173464123 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.125 java.net.URLStreamHandler: sameFile(Ljava/net/URL;Ljava/net/URL;) ===> sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
0.18911361692572146 sun.dc.pr.PathStroker: beginSubpath(FF) ===> java.awt.BasicStroke$FillAdapter: beginSubpath(FF)
0.20507812499001563 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
0.220703124997 sun.net.www.protocol.jar.JarFileFactory: getPermission(Ljava/util/jar/JarFile;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.23437499999475 sun.net.www.protocol.jar.JarURLConnection: getUseCaches() ===> java.net.URLConnection: getUseCaches()
0.234374999996 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.234374999996875 java.lang.Object: <init>() ===> java.lang.ref.Finalizer: register(Ljava/lang/Object;)
0.2343749999975 java.io.FileInputStream: open(Ljava/lang/String;) ===> java.io.FileNotFoundException: <init>(Ljava/lang/String;Ljava/lang/String;)
0.23437499999925 java.util.LinkedHashMap: addEntry(ILjava/lang/Object;Ljava/lang/Object;I) ===> java.io.ExpiringCache$1: removeEldestEntry(Ljava/util/Map$Entry;)
0.234374999999625 sun.font.StandardGlyphVector: init(Ljava/awt/Font;[CIILjava/awt/font/FontRenderContext;I) ===> sun.font.CompositeGlyphMapper: charsToGlyphs(I[C[I)
0.2680263593008962 sun.dc.pr.PathStroker: beginSubpath(FF) ===> java.awt.BasicStroke$FillAdapter: appendLine(FF)
0.2811517193016563 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: closedSubpath()
0.30091080632857464 java.io.File: getCanonicalFile() ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.33007812497315625 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
0.3374686381275931 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.3415834396390493 sun.font.FileFont: getFontMetrics(J) ===> java.nio.DirectByteBuffer: <init>(JI)
0.3475756048590817 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: appendCubic(FFFFFF)
0.35176659366142904 sun.dc.pr.PathStroker: beginSubpath(FF) ===> java.awt.BasicStroke$FillAdapter: appendCubic(FFFFFF)
0.3822288512667772 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.382336391961323 java.io.File: <init>(Ljava/lang/String;Ljava/io/File;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.3883401156805293 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.41819047921169195 sun.dc.pr.PathStroker: beginSubpath(FF) ===> java.awt.BasicStroke$FillAdapter: closedSubpath()
0.43131583921130995 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: appendLine(FF)
0.4870910644118254 java.net.URL: <init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;) ===> sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
0.5102285815909968 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: beginSubpath(FF)
0.5340509292243732 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.6291109831617739 sun.font.TrueTypeFont: createScaler(IIZ[I) ===> java.nio.DirectByteBuffer: <init>(JI)
0.6352936431503877 java.io.File: exists() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.6559412134311366 java.io.File: isDirectory() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.6842977468548765 sun.font.StandardGlyphVector: setupGlyphImages([J[F[D) ===> sun.font.CompositeStrike: getGlyphImagePtrs([I[JI)
0.6993421985131756 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: endPath()
0.7026332838624254 java.io.File: isFile() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.9594310949216049 java.lang.ref.Reference$ReferenceHandler: run() ===> java.lang.ref.ReferenceQueue: enqueue(Ljava/lang/ref/Reference;)
0.9990352367175355 sun.font.FileFont: getFontMetrics(J) ===> sun.font.StrikeMetrics: <init>(FFFFFFFFFF)
0.999035236958761 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.FillParallelogram: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369588106 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.FillPath: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369588194 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawGlyphList: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369588573 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawGlyphListAA: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369589642 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.BlitBg: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369591652 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.MaskFill: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369591798 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawGlyphListLCD: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369592473 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawLine: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.99903523695927 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.FillRect: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369593485 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawParallelogram: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369595006 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawPath: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369597121 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.ScaledBlit: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369612038 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawPolygons: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.99903523696418 sun.font.SunLayoutEngine: nativeLayout(Lsun/font/Font2D;Lsun/font/FontStrike;[FII[CIIIIIIILjava/awt/geom/Point2D$Float;Lsun/font/GlyphLayout$GVData;) ===> sun.font.Font2D: charToGlyph(I)
0.9990352369644053 sun.font.SunLayoutEngine: nativeLayout(Lsun/font/Font2D;Lsun/font/FontStrike;[FII[CIIIIIIILjava/awt/geom/Point2D$Float;Lsun/font/GlyphLayout$GVData;) ===> sun.font.TrueTypeFont: getTableBytes(I)
0.9990352369644568 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.TransformHelper: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369646501 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.FillSpans: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352369674126 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawRect: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.999035236969643 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.Blit: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
1.8817812708362773 java.lang.ref.Reference$ReferenceHandler: run() ===> sun.misc.Cleaner: clean()
3.9923421468634364 sun.font.StandardGlyphVector$GlyphStrike: getGlyphOutlineBounds(IFF) ===> sun.font.CompositeStrike: getGlyphOutlineBounds(I)
7.008815128864787 sun.font.SunLayoutEngine: nativeLayout(Lsun/font/Font2D;Lsun/font/FontStrike;[FII[CIIIIIIILjava/awt/geom/Point2D$Float;Lsun/font/GlyphLayout$GVData;) ===> sun.font.FileFontStrike: getGlyphMetrics(I)
===========================================================================
Number of reachable methods missing in rechenknecht.cased.de/batik-small/CallGraph-static.gxl.gz: 116
===========================================================================
java.awt.BasicStroke$FillAdapter: appendCubic(FFFFFF)
java.awt.BasicStroke$FillAdapter: appendLine(FF)
java.awt.BasicStroke$FillAdapter: beginSubpath(FF)
java.awt.BasicStroke$FillAdapter: closedSubpath()
java.awt.BasicStroke$FillAdapter: endPath()
java.awt.BasicStroke$FillAdapter: getCPathConsumer()
java.awt.geom.GeneralPath: <init>(I[BI[FI)
java.awt.geom.Path2D$Float: <init>()
java.io.ExpiringCache$1: removeEldestEntry(Ljava/util/Map$Entry;)
java.io.ExpiringCache$Entry: <init>(JLjava/lang/String;)
java.io.ExpiringCache$Entry: timestamp()
java.io.ExpiringCache$Entry: val()
java.io.ExpiringCache: access$000(Ljava/io/ExpiringCache;)
java.io.ExpiringCache: cleanup()
java.io.ExpiringCache: clear()
java.io.ExpiringCache: entryFor(Ljava/lang/String;)
java.io.ExpiringCache: get(Ljava/lang/String;)
java.io.ExpiringCache: put(Ljava/lang/String;Ljava/lang/String;)
java.io.File: getPrefixLength()
java.io.FileNotFoundException: <init>(Ljava/lang/String;Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize0(Ljava/lang/String;)
java.io.UnixFileSystem: checkAccess(Ljava/io/File;I)
java.io.UnixFileSystem: compare(Ljava/io/File;Ljava/io/File;)
java.io.UnixFileSystem: createDirectory(Ljava/io/File;)
java.io.UnixFileSystem: createFileExclusively(Ljava/lang/String;)
java.io.UnixFileSystem: delete(Ljava/io/File;)
java.io.UnixFileSystem: delete0(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes0(Ljava/io/File;)
java.io.UnixFileSystem: getLastModifiedTime(Ljava/io/File;)
java.io.UnixFileSystem: hashCode(Ljava/io/File;)
java.io.UnixFileSystem: isAbsolute(Ljava/io/File;)
java.io.UnixFileSystem: list(Ljava/io/File;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;II)
java.io.UnixFileSystem: parentOrNull(Ljava/lang/String;)
java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
java.io.UnixFileSystem: resolve(Ljava/io/File;)
java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
java.lang.ClassLoader$NativeLibrary: getFromClass()
java.lang.Runtime: load0(Ljava/lang/Class;Ljava/lang/String;)
java.lang.System: load(Ljava/lang/String;)
java.lang.ref.FinalReference: <init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)
java.lang.ref.Finalizer: <init>(Ljava/lang/Object;)
java.lang.ref.Finalizer: add()
java.lang.ref.Finalizer: register(Ljava/lang/Object;)
java.net.URL: getUserInfo()
java.net.URLConnection: getUseCaches()
java.net.URLStreamHandler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
java.nio.DirectByteBuffer: <init>(JI)
java.nio.DirectByteBuffer: isReadOnly()
sun.dc.pr.PathFiller: getCPathConsumer()
sun.dc.pr.PathStroker: getCPathConsumer()
sun.font.CompositeGlyphMapper: charsToGlyphs(I[C[I)
sun.font.CompositeStrike: getGlyphImagePtrs([I[JI)
sun.font.CompositeStrike: getGlyphMetrics(I)
sun.font.CompositeStrike: getGlyphOutline(IFF)
sun.font.CompositeStrike: getGlyphOutlineBounds(I)
sun.font.CompositeStrike: getStrikeForGlyph(I)
sun.font.FileFont: getGlyphImage(JI)
sun.font.FileFont: getGlyphMetrics(JILjava/awt/geom/Point2D$Float;)
sun.font.FileFont: getGlyphOutline(JIFF)
sun.font.FileFont: getGlyphOutlineBounds(JI)
sun.font.FileFontStrike: getCachedGlyphPtr(I)
sun.font.FileFontStrike: getGlyphImagePtr(I)
sun.font.FileFontStrike: getGlyphMetrics(I)
sun.font.FileFontStrike: getGlyphMetrics(IZ)
sun.font.FileFontStrike: getGlyphOutline(IFF)
sun.font.FileFontStrike: getGlyphOutlineBounds(I)
sun.font.FileFontStrike: getSlot0GlyphImagePtrs([I[JI)
sun.font.FileFontStrike: setCachedGlyphPtr(IJ)
sun.font.Font2D: charToGlyph(I)
sun.font.Font2D: getStrike(Ljava/awt/Font;Ljava/awt/geom/AffineTransform;Ljava/awt/geom/AffineTransform;II)
sun.font.StrikeMetrics: <init>(FFFFFFFFFF)
sun.font.TrueTypeFont: getTableBytes(I)
sun.java2d.DefaultDisposerRecord: <init>(JJ)
sun.java2d.Disposer: addRecord(Ljava/lang/Object;JJ)
sun.java2d.SurfaceData: getDisposerReferent()
sun.java2d.loops.Blit: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.BlitBg: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawGlyphList: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawGlyphListAA: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawGlyphListLCD: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawLine: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawParallelogram: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawPath: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawPolygons: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawRect: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.FillParallelogram: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.FillPath: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.FillRect: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.FillSpans: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.MaskFill: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.ScaledBlit: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.TransformHelper: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.net.DefaultProgressMeteringPolicy: <init>()
sun.net.DefaultProgressMeteringPolicy: shouldMeterInput(Ljava/net/URL;Ljava/lang/String;)
sun.net.ProgressMonitor: <clinit>()
sun.net.ProgressMonitor: <init>()
sun.net.ProgressMonitor: getDefault()
sun.net.ProgressMonitor: shouldMeterInput(Ljava/net/URL;Ljava/lang/String;)
sun.net.www.MessageHeader: <init>()
sun.net.www.MessageHeader: grow()
sun.net.www.URLConnection: <init>(Ljava/net/URL;)
sun.net.www.protocol.file.FileURLConnection: <clinit>()
sun.net.www.protocol.file.FileURLConnection: <init>(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.FileURLConnection: connect()
sun.net.www.protocol.file.FileURLConnection: getInputStream()
sun.net.www.protocol.file.FileURLConnection: getPermission()
sun.net.www.protocol.file.Handler: createFileURLConnection(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;Ljava/net/Proxy;)
sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
sun.reflect.GeneratedConstructorAccessor1: newInstance([Ljava/lang/Object;)
