java.lang.RuntimeException: Caught exception in parsing: com.sun.org.apache.xerces.internal.impl.io.MalformedByteSequenceException: Invalid byte 1 of 1-byte UTF-8 sequence.
Iteration: 1000 Flow: 0.20888567462191565
Iteration: 2000 Flow: 0.18898352506747976
Iteration: 3000 Flow: 0.09583115055080703
Iteration: 4000 Flow: 0.06055766230464115
Iteration: 5000 Flow: 0.04378912361836505
Iteration: 6000 Flow: 0.028613724841696976
Iteration: 7000 Flow: 0.019036808978666803
Iteration: 8000 Flow: 0.01114719508026593
Iteration: 9000 Flow: 0.007959176049882019
Iteration: 10000 Flow: 0.004698242208118278
Iteration: 11000 Flow: 0.0030880142997067135
Iteration: 12000 Flow: 0.0020124874149817207
Iteration: 13000 Flow: 0.001306984620860334
===========================================================================
Missing entry points in rechenknecht.cased.de/h2-default/CallGraph-static.gxl.gz:
===========================================================================
0.0 org.h2.engine.DatabaseCloser: run()
===========================================================================
Missing call edges in rechenknecht.cased.de/h2-default/CallGraph-static.gxl.gz:
===========================================================================
0.0 sun.reflect.NativeConstructorAccessorImpl: newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;) ===> org.h2.engine.SessionFactoryEmbedded: <init>()
0.0729040082304093 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.109375 sun.nio.cs.StreamEncoder: <init>(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;) ===> sun.nio.cs.UTF_8: newEncoder()
0.125 java.io.File: length() ===> java.io.UnixFileSystem: getLength(Ljava/io/File;)
0.17862237676394138 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.2034047331817407 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.220703124997125 java.lang.StringCoding$StringEncoder: <init>(Ljava/nio/charset/Charset;Ljava/lang/String;) ===> sun.nio.cs.UTF_8: newEncoder()
0.2343749999965 java.io.File: list() ===> java.io.UnixFileSystem: list(Ljava/io/File;)
0.23437499999925 java.io.File: compareTo(Ljava/io/File;) ===> java.io.UnixFileSystem: compare(Ljava/io/File;Ljava/io/File;)
0.234374999999375 sun.net.www.protocol.jar.JarURLConnection: getUseCaches() ===> java.net.URLConnection: getUseCaches()
0.25722885130674095 sun.net.www.protocol.jar.JarFileFactory: getPermission(Ljava/util/jar/JarFile;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.2939758300682754 java.net.URLClassLoader: getPermissions(Ljava/security/CodeSource;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.3300781249952813 java.nio.charset.CharsetEncoder: replaceWith([B) ===> sun.nio.cs.UTF_8$Encoder: isLegalReplacement([B)
0.3300781249955156 java.nio.charset.CharsetDecoder: decode(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z) ===> sun.nio.cs.UTF_8$Decoder: decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
0.5512046813546874 java.lang.ref.Finalizer: runFinalizer() ===> java.lang.ref.Finalizer: hasBeenFinalized()
0.5512046813567477 java.lang.ref.Finalizer: runFinalizer() ===> java.lang.ref.Finalizer: remove()
0.5512046813652451 java.lang.ref.Reference$ReferenceHandler: run() ===> java.lang.ref.ReferenceQueue: enqueue(Ljava/lang/ref/Reference;)
0.6073040961768272 java.lang.StringCoding$StringDecoder: charsetName() ===> sun.nio.cs.UTF_8: historicalName()
0.6073040961774742 java.io.File: hashCode() ===> java.io.UnixFileSystem: hashCode(Ljava/io/File;)
0.6563910841319915 java.net.URLStreamHandler: sameFile(Ljava/net/URL;Ljava/net/URL;) ===> sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
0.722726488687299 java.io.File: getCanonicalFile() ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.820412853218364 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.8562001614407285 java.io.File: exists() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.8972895013002942 java.io.File: isDirectory() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.9836143341017538 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
1.1269417548406366 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
1.1291726230935546 sun.nio.cs.StreamDecoder: <init>(Ljava/io/InputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;) ===> sun.nio.cs.UTF_8: newDecoder()
1.1739129067605867 java.lang.StringCoding$StringDecoder: <init>(Ljava/nio/charset/Charset;Ljava/lang/String;) ===> sun.nio.cs.UTF_8: newDecoder()
1.8826426587039056 java.io.File: getAbsolutePath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
2.201293150180012 java.nio.charset.CharsetEncoder: encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z) ===> sun.nio.cs.UTF_8$Encoder: encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
2.628878645114439 java.lang.Object: <init>() ===> java.lang.ref.Finalizer: register(Ljava/lang/Object;)
2.9942280242558716 java.net.URL: <init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;) ===> sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
7.969317461307133 java.net.URL: openConnection() ===> sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
7.9766036290319144 java.net.URL: openStream() ===> sun.net.www.protocol.file.FileURLConnection: getInputStream()
8.97943996605694 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
===========================================================================
Number of reachable methods missing in rechenknecht.cased.de/h2-default/CallGraph-static.gxl.gz: 68
===========================================================================
java.io.ExpiringCache$1: removeEldestEntry(Ljava/util/Map$Entry;)
java.io.ExpiringCache$Entry: <init>(JLjava/lang/String;)
java.io.ExpiringCache$Entry: timestamp()
java.io.ExpiringCache$Entry: val()
java.io.ExpiringCache: access$000(Ljava/io/ExpiringCache;)
java.io.ExpiringCache: clear()
java.io.ExpiringCache: entryFor(Ljava/lang/String;)
java.io.ExpiringCache: get(Ljava/lang/String;)
java.io.ExpiringCache: put(Ljava/lang/String;Ljava/lang/String;)
java.io.File: getPrefixLength()
java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize0(Ljava/lang/String;)
java.io.UnixFileSystem: compare(Ljava/io/File;Ljava/io/File;)
java.io.UnixFileSystem: createDirectory(Ljava/io/File;)
java.io.UnixFileSystem: delete(Ljava/io/File;)
java.io.UnixFileSystem: delete0(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes0(Ljava/io/File;)
java.io.UnixFileSystem: getLastModifiedTime(Ljava/io/File;)
java.io.UnixFileSystem: getLength(Ljava/io/File;)
java.io.UnixFileSystem: hashCode(Ljava/io/File;)
java.io.UnixFileSystem: isAbsolute(Ljava/io/File;)
java.io.UnixFileSystem: list(Ljava/io/File;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;)
java.io.UnixFileSystem: parentOrNull(Ljava/lang/String;)
java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
java.io.UnixFileSystem: resolve(Ljava/io/File;)
java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
java.lang.ref.FinalReference: <init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)
java.lang.ref.Finalizer: <init>(Ljava/lang/Object;)
java.lang.ref.Finalizer: add()
java.lang.ref.Finalizer: register(Ljava/lang/Object;)
java.net.URL: getUserInfo()
java.net.URLConnection: getUseCaches()
java.net.URLStreamHandler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
sun.net.DefaultProgressMeteringPolicy: <init>()
sun.net.DefaultProgressMeteringPolicy: shouldMeterInput(Ljava/net/URL;Ljava/lang/String;)
sun.net.ProgressMonitor: <clinit>()
sun.net.ProgressMonitor: <init>()
sun.net.ProgressMonitor: getDefault()
sun.net.ProgressMonitor: shouldMeterInput(Ljava/net/URL;Ljava/lang/String;)
sun.net.www.MessageHeader: <init>()
sun.net.www.MessageHeader: grow()
sun.net.www.URLConnection: <init>(Ljava/net/URL;)
sun.net.www.protocol.file.FileURLConnection: <clinit>()
sun.net.www.protocol.file.FileURLConnection: <init>(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.FileURLConnection: connect()
sun.net.www.protocol.file.FileURLConnection: getInputStream()
sun.net.www.protocol.file.FileURLConnection: getPermission()
sun.net.www.protocol.file.Handler: createFileURLConnection(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;Ljava/net/Proxy;)
sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
sun.nio.cs.UTF_8$Decoder: <init>(Ljava/nio/charset/Charset;)
sun.nio.cs.UTF_8$Decoder: <init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)
sun.nio.cs.UTF_8$Decoder: decodeArrayLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
sun.nio.cs.UTF_8$Decoder: decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
sun.nio.cs.UTF_8$Decoder: xflow(Ljava/nio/Buffer;IILjava/nio/Buffer;II)
sun.nio.cs.UTF_8$Encoder: <init>(Ljava/nio/charset/Charset;)
sun.nio.cs.UTF_8$Encoder: <init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)
sun.nio.cs.UTF_8$Encoder: encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
sun.nio.cs.UTF_8$Encoder: encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
sun.nio.cs.UTF_8$Encoder: isLegalReplacement([B)
sun.nio.cs.UTF_8: historicalName()
sun.nio.cs.UTF_8: newDecoder()
sun.nio.cs.UTF_8: newEncoder()
sun.nio.cs.UTF_8: updatePositions(Ljava/nio/Buffer;ILjava/nio/Buffer;I)
