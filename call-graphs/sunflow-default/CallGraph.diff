java.lang.RuntimeException: Caught exception in parsing: com.sun.org.apache.xerces.internal.impl.io.MalformedByteSequenceException: Invalid byte 1 of 1-byte UTF-8 sequence.
Iteration: 1000 Flow: 0.1311091004869366
Iteration: 2000 Flow: 0.06668013768101437
Iteration: 3000 Flow: 0.02442214780406597
Iteration: 4000 Flow: 0.00933860075855165
Iteration: 5000 Flow: 0.0036682823255981055
Iteration: 6000 Flow: 0.0013568248851326405
===========================================================================
Missing entry points in rechenknecht.cased.de/sunflow-default/CallGraph-static.gxl.gz:
===========================================================================
0.0 java.util.jar.JarFile: <init>(Ljava/lang/String;)
===========================================================================
Missing call edges in rechenknecht.cased.de/sunflow-default/CallGraph-static.gxl.gz:
===========================================================================
0.0 org.sunflow.core.Scene: render(Lorg/sunflow/core/Options;Lorg/sunflow/core/ImageSampler;Lorg/sunflow/core/Display;) ===> java.lang.ClassLoader: checkPackageAccess(Ljava/lang/Class;Ljava/security/ProtectionDomain;)
0.023139977093648102 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.04908698796285094 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.08554205488498011 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.124999999999 java.lang.ref.Finalizer: runFinalizer() ===> java.lang.ref.Finalizer: hasBeenFinalized()
0.125 java.io.FileInputStream: open(Ljava/lang/String;) ===> java.io.FileNotFoundException: <init>(Ljava/lang/String;Ljava/lang/String;)
0.18937667128126964 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.20229689674910656 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.205078124995625 sun.nio.cs.StreamDecoder: <init>(Ljava/io/InputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;) ===> sun.nio.cs.UTF_8: newDecoder()
0.20874023437542188 java.lang.StringCoding$StringDecoder: <init>(Ljava/nio/charset/Charset;Ljava/lang/String;) ===> sun.nio.cs.UTF_8: newDecoder()
0.23437499999975 java.lang.StringCoding$StringDecoder: charsetName() ===> sun.nio.cs.UTF_8: historicalName()
0.26994558684813635 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.33007812499057815 java.lang.ref.Reference$ReferenceHandler: run() ===> java.lang.ref.ReferenceQueue: enqueue(Ljava/lang/ref/Reference;)
0.3484819124183692 java.io.File: getCanonicalFile() ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.388949687593591 java.io.File: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.421455657812244 sun.net.www.protocol.jar.JarFileFactory: getPermission(Ljava/util/jar/JarFile;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.44125069780349546 java.io.File$LazyInitialization: temporaryDirectory() ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.4442287257662174 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.4539582607552388 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
0.5255563849806809 java.net.URLClassLoader: getPermissions(Ljava/security/CodeSource;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.5512046813648721 java.io.File: checkAndCreate(Ljava/lang/String;Ljava/lang/SecurityManager;) ===> java.io.UnixFileSystem: createFileExclusively(Ljava/lang/String;)
0.5548065103694092 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.5912259805230542 java.io.File: getAbsolutePath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
0.9096048855351716 java.io.File: hashCode() ===> java.io.UnixFileSystem: hashCode(Ljava/io/File;)
0.9650784820015044 java.io.File: exists() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.9990352360078606 java.lang.ClassLoader$NativeLibrary: load(Ljava/lang/String;) ===> java.lang.ClassLoader$NativeLibrary: getFromClass()
0.999043256930022 java.util.LinkedHashMap: addEntry(ILjava/lang/Object;Ljava/lang/Object;I) ===> java.io.ExpiringCache$1: removeEldestEntry(Ljava/util/Map$Entry;)
1.0321350740762745 java.io.File: isDirectory() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
1.4753122253611228 sun.nio.cs.StreamEncoder: <init>(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;) ===> sun.nio.cs.UTF_8: newEncoder()
1.5190933129278135 java.lang.StringCoding$StringEncoder: <init>(Ljava/nio/charset/Charset;Ljava/lang/String;) ===> sun.nio.cs.UTF_8: newEncoder()
1.9507888506003843 java.io.File: isAbsolute() ===> java.io.UnixFileSystem: isAbsolute(Ljava/io/File;)
1.9972353971579881 java.lang.ClassLoader$NativeLibrary: load(Ljava/lang/String;) ===> java.lang.System: load(Ljava/lang/String;)
2.994405538234049 java.net.URL: <init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;) ===> sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
2.9951963687292693 java.io.File: delete() ===> java.io.UnixFileSystem: delete(Ljava/io/File;)
3.9915575987130705 java.lang.Object: <init>() ===> java.lang.ref.Finalizer: register(Ljava/lang/Object;)
8.97919365158195 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
===========================================================================
Number of reachable methods missing in rechenknecht.cased.de/sunflow-default/CallGraph-static.gxl.gz: 65
===========================================================================
java.io.ExpiringCache$1: removeEldestEntry(Ljava/util/Map$Entry;)
java.io.ExpiringCache$Entry: <init>(JLjava/lang/String;)
java.io.ExpiringCache$Entry: timestamp()
java.io.ExpiringCache$Entry: val()
java.io.ExpiringCache: access$000(Ljava/io/ExpiringCache;)
java.io.ExpiringCache: clear()
java.io.ExpiringCache: entryFor(Ljava/lang/String;)
java.io.ExpiringCache: get(Ljava/lang/String;)
java.io.ExpiringCache: put(Ljava/lang/String;Ljava/lang/String;)
java.io.File: getPrefixLength()
java.io.FileNotFoundException: <init>(Ljava/lang/String;Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize0(Ljava/lang/String;)
java.io.UnixFileSystem: compare(Ljava/io/File;Ljava/io/File;)
java.io.UnixFileSystem: createDirectory(Ljava/io/File;)
java.io.UnixFileSystem: createFileExclusively(Ljava/lang/String;)
java.io.UnixFileSystem: delete(Ljava/io/File;)
java.io.UnixFileSystem: delete0(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes0(Ljava/io/File;)
java.io.UnixFileSystem: getLastModifiedTime(Ljava/io/File;)
java.io.UnixFileSystem: hashCode(Ljava/io/File;)
java.io.UnixFileSystem: isAbsolute(Ljava/io/File;)
java.io.UnixFileSystem: list(Ljava/io/File;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;)
java.io.UnixFileSystem: parentOrNull(Ljava/lang/String;)
java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
java.io.UnixFileSystem: resolve(Ljava/io/File;)
java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
java.lang.Class: setSigners([Ljava/lang/Object;)
java.lang.ClassLoader$NativeLibrary: getFromClass()
java.lang.Runtime: load0(Ljava/lang/Class;Ljava/lang/String;)
java.lang.System: load(Ljava/lang/String;)
java.lang.ref.FinalReference: <init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)
java.lang.ref.Finalizer: <init>(Ljava/lang/Object;)
java.lang.ref.Finalizer: add()
java.lang.ref.Finalizer: register(Ljava/lang/Object;)
java.net.URL: getUserInfo()
java.net.URLConnection: getUseCaches()
java.net.URLStreamHandler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
sun.net.www.MessageHeader: <init>()
sun.net.www.MessageHeader: grow()
sun.net.www.URLConnection: <init>(Ljava/net/URL;)
sun.net.www.protocol.file.FileURLConnection: <clinit>()
sun.net.www.protocol.file.FileURLConnection: <init>(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.FileURLConnection: getPermission()
sun.net.www.protocol.file.Handler: createFileURLConnection(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;Ljava/net/Proxy;)
sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
sun.nio.cs.UTF_8$Decoder: <init>(Ljava/nio/charset/Charset;)
sun.nio.cs.UTF_8$Decoder: <init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)
sun.nio.cs.UTF_8$Decoder: decodeArrayLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
sun.nio.cs.UTF_8$Decoder: decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
sun.nio.cs.UTF_8$Decoder: xflow(Ljava/nio/Buffer;IILjava/nio/Buffer;II)
sun.nio.cs.UTF_8$Encoder: <init>(Ljava/nio/charset/Charset;)
sun.nio.cs.UTF_8$Encoder: <init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)
sun.nio.cs.UTF_8$Encoder: encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
sun.nio.cs.UTF_8$Encoder: encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
sun.nio.cs.UTF_8$Encoder: isLegalReplacement([B)
sun.nio.cs.UTF_8: historicalName()
sun.nio.cs.UTF_8: newDecoder()
sun.nio.cs.UTF_8: newEncoder()
sun.nio.cs.UTF_8: updatePositions(Ljava/nio/Buffer;ILjava/nio/Buffer;I)
