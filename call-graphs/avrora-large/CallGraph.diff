java.lang.RuntimeException: Caught exception in parsing: com.sun.org.apache.xerces.internal.impl.io.MalformedByteSequenceException: Invalid byte 1 of 1-byte UTF-8 sequence.
Iteration: 1000 Flow: 0.31324428369799256
Iteration: 2000 Flow: 0.08467559103557946
Iteration: 3000 Flow: 0.037954833752515474
Iteration: 4000 Flow: 0.013148672163908276
Iteration: 5000 Flow: 0.004654600775893713
Iteration: 6000 Flow: 0.0017261828250477733
===========================================================================
Missing entry points in rechenknecht.cased.de/avrora-large/CallGraph-static.gxl.gz:
===========================================================================
0.0 java.util.jar.JarFile: <init>(Ljava/lang/String;)
===========================================================================
Missing call edges in rechenknecht.cased.de/avrora-large/CallGraph-static.gxl.gz:
===========================================================================
0.0 cck.util.Option$List: parseString(Ljava/lang/String;) ===> java.lang.ClassLoader: loadClassInternal(Ljava/lang/String;)
0.109375 sun.net.www.protocol.jar.JarFileFactory: getPermission(Ljava/util/jar/JarFile;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.12045094315101132 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.125 java.net.URLStreamHandler: sameFile(Ljava/net/URL;Ljava/net/URL;) ===> sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
0.20507812499625 sun.nio.cs.StreamDecoder: <init>(Ljava/io/InputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;) ===> sun.nio.cs.UTF_8: newDecoder()
0.20636286521850639 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.20874023437521877 java.lang.StringCoding$StringDecoder: <init>(Ljava/nio/charset/Charset;Ljava/lang/String;) ===> sun.nio.cs.UTF_8: newDecoder()
0.32132239544567054 sun.nio.cs.StreamEncoder: <init>(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;) ===> sun.nio.cs.UTF_8: newEncoder()
0.3300781249943594 java.net.URL: openConnection() ===> sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
0.358687818035232 java.lang.StringCoding$StringEncoder: <init>(Ljava/nio/charset/Charset;Ljava/lang/String;) ===> sun.nio.cs.UTF_8: newEncoder()
0.3820882683603828 java.lang.reflect.Constructor: newInstance([Ljava/lang/Object;) ===> java.lang.Class: getModifiers()
0.41381835936163286 java.io.File: list() ===> java.io.UnixFileSystem: list(Ljava/io/File;)
0.6072390411443835 sun.reflect.ReflectionFactory: newConstructorAccessor(Ljava/lang/reflect/Constructor;) ===> java.lang.Class: getModifiers()
0.6509816614669587 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.6563910841403959 java.lang.StringCoding$StringDecoder: charsetName() ===> sun.nio.cs.UTF_8: historicalName()
0.672221427524357 java.io.File: getCanonicalFile() ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.8802419709215145 java.io.File: isDirectory() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.8987302075847393 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
0.9990352358012966 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.9990352358020441 java.lang.ref.Finalizer: runFinalizer() ===> java.lang.ref.Finalizer: remove()
0.9990352358100023 java.lang.ref.Finalizer: runFinalizer() ===> java.lang.ref.Finalizer: hasBeenFinalized()
1.1169937914645536 java.io.File: exists() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
1.3463271246112654 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
2.095453497126526 java.io.File: getAbsolutePath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
2.6769135044205106 java.io.File: delete() ===> java.io.UnixFileSystem: delete(Ljava/io/File;)
2.758594748105016 java.nio.charset.CharsetDecoder: decode(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z) ===> sun.nio.cs.UTF_8$Decoder: decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
2.8364761463102495 java.nio.charset.CharsetEncoder: encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z) ===> sun.nio.cs.UTF_8$Encoder: encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
2.9944438370463624 java.net.URL: <init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;) ===> sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
3.9913556302383286 java.lang.Object: <init>() ===> java.lang.ref.Finalizer: register(Ljava/lang/Object;)
8.979103215232573 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
===========================================================================
Number of reachable methods missing in rechenknecht.cased.de/avrora-large/CallGraph-static.gxl.gz: 61
===========================================================================
java.io.ExpiringCache$1: removeEldestEntry(Ljava/util/Map$Entry;)
java.io.ExpiringCache$Entry: <init>(JLjava/lang/String;)
java.io.ExpiringCache$Entry: timestamp()
java.io.ExpiringCache$Entry: val()
java.io.ExpiringCache: access$000(Ljava/io/ExpiringCache;)
java.io.ExpiringCache: clear()
java.io.ExpiringCache: entryFor(Ljava/lang/String;)
java.io.ExpiringCache: get(Ljava/lang/String;)
java.io.ExpiringCache: put(Ljava/lang/String;Ljava/lang/String;)
java.io.File: getPrefixLength()
java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize0(Ljava/lang/String;)
java.io.UnixFileSystem: compare(Ljava/io/File;Ljava/io/File;)
java.io.UnixFileSystem: createDirectory(Ljava/io/File;)
java.io.UnixFileSystem: delete(Ljava/io/File;)
java.io.UnixFileSystem: delete0(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes0(Ljava/io/File;)
java.io.UnixFileSystem: getLastModifiedTime(Ljava/io/File;)
java.io.UnixFileSystem: hashCode(Ljava/io/File;)
java.io.UnixFileSystem: isAbsolute(Ljava/io/File;)
java.io.UnixFileSystem: list(Ljava/io/File;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;II)
java.io.UnixFileSystem: parentOrNull(Ljava/lang/String;)
java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
java.io.UnixFileSystem: resolve(Ljava/io/File;)
java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
java.lang.Class: getModifiers()
java.lang.ref.FinalReference: <init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)
java.lang.ref.Finalizer: <init>(Ljava/lang/Object;)
java.lang.ref.Finalizer: add()
java.lang.ref.Finalizer: register(Ljava/lang/Object;)
java.net.URL: getUserInfo()
java.net.URLConnection: getUseCaches()
java.net.URLStreamHandler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
sun.net.www.MessageHeader: <init>()
sun.net.www.MessageHeader: grow()
sun.net.www.URLConnection: <init>(Ljava/net/URL;)
sun.net.www.protocol.file.FileURLConnection: <clinit>()
sun.net.www.protocol.file.FileURLConnection: <init>(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.FileURLConnection: getPermission()
sun.net.www.protocol.file.Handler: createFileURLConnection(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;Ljava/net/Proxy;)
sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
sun.nio.cs.UTF_8$Decoder: <init>(Ljava/nio/charset/Charset;)
sun.nio.cs.UTF_8$Decoder: <init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)
sun.nio.cs.UTF_8$Decoder: decodeArrayLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
sun.nio.cs.UTF_8$Decoder: decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
sun.nio.cs.UTF_8$Decoder: xflow(Ljava/nio/Buffer;IILjava/nio/Buffer;II)
sun.nio.cs.UTF_8$Encoder: <init>(Ljava/nio/charset/Charset;)
sun.nio.cs.UTF_8$Encoder: <init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)
sun.nio.cs.UTF_8$Encoder: encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
sun.nio.cs.UTF_8$Encoder: encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
sun.nio.cs.UTF_8$Encoder: isLegalReplacement([B)
sun.nio.cs.UTF_8: historicalName()
sun.nio.cs.UTF_8: newDecoder()
sun.nio.cs.UTF_8: newEncoder()
sun.nio.cs.UTF_8: updatePositions(Ljava/nio/Buffer;ILjava/nio/Buffer;I)
