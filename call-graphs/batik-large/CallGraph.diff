java.lang.RuntimeException: Caught exception in parsing: com.sun.org.apache.xerces.internal.impl.io.MalformedByteSequenceException: Invalid byte 1 of 1-byte UTF-8 sequence.
Iteration: 1000 Flow: 0.060557663504006584
Iteration: 2000 Flow: 0.003667230282330092
===========================================================================
Missing entry points in rechenknecht.cased.de/batik-large/CallGraph-static.gxl.gz:
===========================================================================
0.0 java.util.jar.JarFile: <init>(Ljava/lang/String;)
===========================================================================
Missing call edges in rechenknecht.cased.de/batik-large/CallGraph-static.gxl.gz:
===========================================================================
0.0 org.apache.crimson.parser.AttributesExImpl: addAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z) ===> java.lang.ClassLoader: checkPackageAccess(Ljava/lang/Class;Ljava/security/ProtectionDomain;)
0.109374999996625 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
0.109374999999625 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.109375 java.io.File: <init>(Ljava/lang/String;Ljava/io/File;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.125 java.io.FileInputStream: open(Ljava/lang/String;) ===> java.io.FileNotFoundException: <init>(Ljava/lang/String;Ljava/lang/String;)
0.23437499999425 sun.java2d.Disposer: add(Ljava/lang/Object;Lsun/java2d/DisposerRecord;) ===> sun.java2d.SurfaceData: getDisposerReferent()
0.234374999995875 java.lang.Object: <init>() ===> java.lang.ref.Finalizer: register(Ljava/lang/Object;)
0.234374999997125 sun.font.StandardGlyphVector: init(Ljava/awt/Font;[CIILjava/awt/font/FontRenderContext;I) ===> sun.font.CompositeGlyphMapper: charsToGlyphs(I[C[I)
0.234374999998125 org.apache.batik.util.ParsedURLData: openStreamInternal(Ljava/lang/String;Ljava/util/Iterator;Ljava/util/Iterator;) ===> sun.net.www.protocol.file.FileURLConnection: getInputStream()
0.234374999999 sun.font.FileFont: getFontMetrics(J) ===> sun.font.StrikeMetrics: <init>(FFFFFFFFFF)
0.23437499999975 java.io.File: compareTo(Ljava/io/File;) ===> java.io.UnixFileSystem: compare(Ljava/io/File;Ljava/io/File;)
0.36379931697906087 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: appendQuadratic(FFFF)
0.36850016183542583 sun.dc.pr.PathStroker: beginSubpath(FF) ===> java.awt.BasicStroke$FillAdapter: closedSubpath()
0.41381835933587824 java.lang.ref.Reference$ReferenceHandler: run() ===> java.lang.ref.ReferenceQueue: enqueue(Ljava/lang/ref/Reference;)
0.4138183593415488 java.lang.ref.Reference$ReferenceHandler: run() ===> sun.misc.Cleaner: clean()
0.41381835934926364 sun.java2d.SunGraphics2D: checkFontInfo(Lsun/java2d/loops/FontInfo;Ljava/awt/Font;Ljava/awt/font/FontRenderContext;) ===> sun.font.Font2D: getStrike(Ljava/awt/Font;Ljava/awt/geom/AffineTransform;Ljava/awt/geom/AffineTransform;II)
0.41456172119957596 sun.dc.pr.PathStroker: beginSubpath(FF) ===> java.awt.BasicStroke$FillAdapter: appendCubic(FFFFFF)
0.4225782407046155 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: beginSubpath(FF)
0.43965173465126456 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: appendLine(FF)
0.5593835044571452 sun.dc.pr.PathStroker: beginSubpath(FF) ===> java.awt.BasicStroke$FillAdapter: appendLine(FF)
0.576456998403457 sun.dc.pr.PathStroker: beginSubpath(FF) ===> java.awt.BasicStroke$FillAdapter: beginSubpath(FF)
0.5844735179074794 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: appendCubic(FFFFFF)
0.5936591617126927 java.io.File: isFile() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.6305350772721183 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: closedSubpath()
0.6352359221321972 sun.dc.pr.PathStroker: beginSubpath(FF) ===> java.awt.BasicStroke$FillAdapter: appendQuadratic(FFFF)
0.6783505289983289 java.io.File: exists() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.7106028954334391 java.io.File: isDirectory() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.9990352390981942 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.FillRect: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.999035239098299 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawGlyphListAA: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390984083 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawPolygons: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390984388 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawGlyphListLCD: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390986584 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.FillPath: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390987289 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.FillParallelogram: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390988604 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.BlitBg: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390989484 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawLine: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390989641 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawRect: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390990435 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawGlyphList: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390991323 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawParallelogram: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390992192 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.MaskFill: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390992455 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.Blit: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390993038 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.TransformHelper: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352390994793 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.DrawPath: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352391002902 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.FillSpans: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352391021772 sun.java2d.loops.GraphicsPrimitiveMgr: registerNativeLoops() ===> sun.java2d.loops.ScaledBlit: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
0.9990352391050944 sun.awt.image.codec.JPEGImageDecoderImpl: readJPEGStream(Ljava/io/InputStream;Lcom/sun/image/codec/jpeg/JPEGDecodeParam;Z) ===> com.sun.image.codec.jpeg.JPEGHuffmanTable: <init>([S[S)
0.9990352391059049 sun.awt.image.codec.JPEGImageDecoderImpl: readJPEGStream(Ljava/io/InputStream;Lcom/sun/image/codec/jpeg/JPEGDecodeParam;Z) ===> sun.awt.image.codec.JPEGParam: buildArray(Ljava/util/Vector;)
0.9990352391062044 sun.awt.image.codec.JPEGImageDecoderImpl: readJPEGStream(Ljava/io/InputStream;Lcom/sun/image/codec/jpeg/JPEGDecodeParam;Z) ===> sun.awt.image.codec.JPEGImageDecoderImpl: allocateDataBuffer(III)
0.9990352391070269 sun.dc.pr.PathStroker: endPath() ===> java.awt.BasicStroke$FillAdapter: endPath()
0.9990352391081618 sun.awt.image.codec.JPEGImageDecoderImpl: readJPEGStream(Ljava/io/InputStream;Lcom/sun/image/codec/jpeg/JPEGDecodeParam;Z) ===> sun.awt.image.codec.JPEGImageDecoderImpl: getDecodedColorModel(IZ)
3.9921833290224216 sun.font.StandardGlyphVector$GlyphStrike: getGlyphOutlineBounds(IFF) ===> sun.font.CompositeStrike: getGlyphOutlineBounds(I)
===========================================================================
Number of reachable methods missing in rechenknecht.cased.de/batik-large/CallGraph-static.gxl.gz: 121
===========================================================================
com.sun.image.codec.jpeg.JPEGHuffmanTable: <init>([S[S)
java.awt.BasicStroke$FillAdapter: appendCubic(FFFFFF)
java.awt.BasicStroke$FillAdapter: appendLine(FF)
java.awt.BasicStroke$FillAdapter: appendQuadratic(FFFF)
java.awt.BasicStroke$FillAdapter: beginSubpath(FF)
java.awt.BasicStroke$FillAdapter: closedSubpath()
java.awt.BasicStroke$FillAdapter: endPath()
java.awt.BasicStroke$FillAdapter: getCPathConsumer()
java.awt.geom.GeneralPath: <init>(I[BI[FI)
java.awt.geom.Path2D$Float: <init>()
java.io.ExpiringCache$1: removeEldestEntry(Ljava/util/Map$Entry;)
java.io.ExpiringCache$Entry: <init>(JLjava/lang/String;)
java.io.ExpiringCache$Entry: timestamp()
java.io.ExpiringCache$Entry: val()
java.io.ExpiringCache: access$000(Ljava/io/ExpiringCache;)
java.io.ExpiringCache: cleanup()
java.io.ExpiringCache: clear()
java.io.ExpiringCache: entryFor(Ljava/lang/String;)
java.io.ExpiringCache: get(Ljava/lang/String;)
java.io.ExpiringCache: put(Ljava/lang/String;Ljava/lang/String;)
java.io.File: getPrefixLength()
java.io.FileNotFoundException: <init>(Ljava/lang/String;Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize0(Ljava/lang/String;)
java.io.UnixFileSystem: checkAccess(Ljava/io/File;I)
java.io.UnixFileSystem: compare(Ljava/io/File;Ljava/io/File;)
java.io.UnixFileSystem: createDirectory(Ljava/io/File;)
java.io.UnixFileSystem: createFileExclusively(Ljava/lang/String;)
java.io.UnixFileSystem: delete(Ljava/io/File;)
java.io.UnixFileSystem: delete0(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes0(Ljava/io/File;)
java.io.UnixFileSystem: getLastModifiedTime(Ljava/io/File;)
java.io.UnixFileSystem: hashCode(Ljava/io/File;)
java.io.UnixFileSystem: isAbsolute(Ljava/io/File;)
java.io.UnixFileSystem: list(Ljava/io/File;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;II)
java.io.UnixFileSystem: parentOrNull(Ljava/lang/String;)
java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
java.io.UnixFileSystem: resolve(Ljava/io/File;)
java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
java.lang.ClassLoader$NativeLibrary: getFromClass()
java.lang.Runtime: load0(Ljava/lang/Class;Ljava/lang/String;)
java.lang.System: load(Ljava/lang/String;)
java.lang.ref.FinalReference: <init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)
java.lang.ref.Finalizer: <init>(Ljava/lang/Object;)
java.lang.ref.Finalizer: add()
java.lang.ref.Finalizer: register(Ljava/lang/Object;)
java.net.URL: getUserInfo()
java.net.URLConnection: getUseCaches()
java.net.URLStreamHandler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
java.nio.DirectByteBuffer: <init>(JI)
java.nio.DirectByteBuffer: isReadOnly()
sun.awt.image.codec.JPEGImageDecoderImpl: allocateDataBuffer(III)
sun.awt.image.codec.JPEGImageDecoderImpl: getDecodedColorModel(IZ)
sun.awt.image.codec.JPEGParam: buildArray(Ljava/util/Vector;)
sun.dc.pr.PathFiller: getCPathConsumer()
sun.dc.pr.PathStroker: getCPathConsumer()
sun.font.CompositeGlyphMapper: charsToGlyphs(I[C[I)
sun.font.CompositeStrike: getGlyphImagePtrs([I[JI)
sun.font.CompositeStrike: getGlyphMetrics(I)
sun.font.CompositeStrike: getGlyphOutline(IFF)
sun.font.CompositeStrike: getGlyphOutlineBounds(I)
sun.font.CompositeStrike: getStrikeForGlyph(I)
sun.font.FileFont: getGlyphImage(JI)
sun.font.FileFont: getGlyphMetrics(JILjava/awt/geom/Point2D$Float;)
sun.font.FileFont: getGlyphOutline(JIFF)
sun.font.FileFont: getGlyphOutlineBounds(JI)
sun.font.FileFontStrike: getCachedGlyphPtr(I)
sun.font.FileFontStrike: getGlyphImagePtr(I)
sun.font.FileFontStrike: getGlyphMetrics(I)
sun.font.FileFontStrike: getGlyphMetrics(IZ)
sun.font.FileFontStrike: getGlyphOutline(IFF)
sun.font.FileFontStrike: getGlyphOutlineBounds(I)
sun.font.FileFontStrike: getSlot0GlyphImagePtrs([I[JI)
sun.font.FileFontStrike: setCachedGlyphPtr(IJ)
sun.font.Font2D: charToGlyph(I)
sun.font.Font2D: getStrike(Ljava/awt/Font;Ljava/awt/geom/AffineTransform;Ljava/awt/geom/AffineTransform;II)
sun.font.StrikeMetrics: <init>(FFFFFFFFFF)
sun.font.TrueTypeFont: getTableBytes(I)
sun.java2d.DefaultDisposerRecord: <init>(JJ)
sun.java2d.Disposer: addRecord(Ljava/lang/Object;JJ)
sun.java2d.SurfaceData: getDisposerReferent()
sun.java2d.loops.Blit: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.BlitBg: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawGlyphList: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawGlyphListAA: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawGlyphListLCD: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawLine: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawParallelogram: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawPath: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawPolygons: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.DrawRect: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.FillParallelogram: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.FillPath: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.FillRect: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.FillSpans: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.MaskFill: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.ScaledBlit: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.TransformHelper: <init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.net.DefaultProgressMeteringPolicy: <init>()
sun.net.DefaultProgressMeteringPolicy: shouldMeterInput(Ljava/net/URL;Ljava/lang/String;)
sun.net.ProgressMonitor: <clinit>()
sun.net.ProgressMonitor: <init>()
sun.net.ProgressMonitor: getDefault()
sun.net.ProgressMonitor: shouldMeterInput(Ljava/net/URL;Ljava/lang/String;)
sun.net.www.MessageHeader: <init>()
sun.net.www.MessageHeader: grow()
sun.net.www.URLConnection: <init>(Ljava/net/URL;)
sun.net.www.protocol.file.FileURLConnection: <clinit>()
sun.net.www.protocol.file.FileURLConnection: <init>(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.FileURLConnection: connect()
sun.net.www.protocol.file.FileURLConnection: getInputStream()
sun.net.www.protocol.file.FileURLConnection: getPermission()
sun.net.www.protocol.file.Handler: createFileURLConnection(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;Ljava/net/Proxy;)
sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
sun.reflect.GeneratedConstructorAccessor1: newInstance([Ljava/lang/Object;)
