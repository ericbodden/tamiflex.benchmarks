java.lang.RuntimeException: Caught exception in parsing: com.sun.org.apache.xerces.internal.impl.io.MalformedByteSequenceException: Invalid byte 1 of 1-byte UTF-8 sequence.
Iteration: 1000 Flow: 0.22985238147215592
Iteration: 2000 Flow: 0.11732818489362554
Iteration: 3000 Flow: 0.056762319627975094
Iteration: 4000 Flow: 0.026326386226006193
Iteration: 5000 Flow: 0.01277818582866325
Iteration: 6000 Flow: 0.0062112131864200245
Iteration: 7000 Flow: 0.002923035402807311
Iteration: 8000 Flow: 0.0012636200674619315
===========================================================================
Missing entry points in rechenknecht.cased.de/fop-small/CallGraph-static.gxl.gz:
===========================================================================
0.0 java.util.jar.JarFile: <init>(Ljava/lang/String;)
===========================================================================
Missing call edges in rechenknecht.cased.de/fop-small/CallGraph-static.gxl.gz:
===========================================================================
0.0 org.apache.fop.fo.PropertyList: getBorderPaddingBackgroundProps() ===> java.lang.ClassLoader: loadClassInternal(Ljava/lang/String;)
0.0328844469615965 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.109375 java.lang.StringCoding$StringDecoder: <init>(Ljava/nio/charset/Charset;Ljava/lang/String;) ===> sun.nio.cs.UTF_8: newDecoder()
0.125 java.io.FileInputStream: open(Ljava/lang/String;) ===> java.io.FileNotFoundException: <init>(Ljava/lang/String;Ljava/lang/String;)
0.12850418730283752 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.14344262776726158 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.16805804077634248 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.205078124994375 java.net.URLClassLoader: getPermissions(Ljava/security/CodeSource;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.20874023437270312 sun.net.www.protocol.jar.JarFileFactory: getPermission(Ljava/util/jar/JarFile;) ===> sun.net.www.protocol.file.FileURLConnection: getPermission()
0.220703124998625 sun.nio.cs.StreamDecoder: <init>(Ljava/io/InputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;) ===> sun.nio.cs.UTF_8: newDecoder()
0.234374999997125 java.net.URLStreamHandler: sameFile(Ljava/net/URL;Ljava/net/URL;) ===> sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
0.234374999999125 java.net.URL: openConnection() ===> sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
0.25209719337565833 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
0.2614684276709525 java.io.File: getCanonicalFile() ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.3241610848311604 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.3931816913937694 java.io.File: getAbsoluteFile() ===> java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
0.40499029284270244 java.lang.StringCoding$StringEncoder: charsetName() ===> sun.nio.cs.UTF_8: historicalName()
0.4138183593596543 java.io.File: length() ===> java.io.UnixFileSystem: getLength(Ljava/io/File;)
0.4138183593596621 sun.reflect.DelegatingMethodAccessorImpl: invoke(Ljava/lang/Object;[Ljava/lang/Object;) ===> sun.reflect.GeneratedMethodAccessor1: invoke(Ljava/lang/Object;[Ljava/lang/Object;)
0.4407996338882296 java.lang.StringCoding$StringDecoder: charsetName() ===> sun.nio.cs.UTF_8: historicalName()
0.5430291396779484 java.io.File: <init>(Ljava/io/File;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.5463699623169876 java.io.File: <init>(Ljava/lang/String;Ljava/io/File;) ===> java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
0.5512046813419682 java.lang.ref.Finalizer: runFinalizer() ===> java.lang.ref.Finalizer: remove()
0.5512046813450648 java.lang.ref.Finalizer: runFinalizer() ===> java.lang.ref.Finalizer: hasBeenFinalized()
0.6073040961619405 java.io.File: lastModified() ===> java.io.UnixFileSystem: getLastModifiedTime(Ljava/io/File;)
0.641445357216952 java.io.File: exists() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.6622535088673501 java.io.File: isDirectory() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.6688699419957048 java.io.File: <init>(Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.6934586698988073 java.io.File: isFile() ===> java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
0.6993421985345053 java.lang.ClassLoader$NativeLibrary: load(Ljava/lang/String;) ===> java.lang.ClassLoader$NativeLibrary: getFromClass()
0.7852586521808169 java.io.File: <init>(Ljava/lang/String;Ljava/lang/String;) ===> java.io.UnixFileSystem: normalize(Ljava/lang/String;)
0.8151486505749082 java.io.File: getAbsolutePath() ===> java.io.UnixFileSystem: resolve(Ljava/io/File;)
0.9987399002813259 sun.reflect.NativeConstructorAccessorImpl: newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;) ===> sun.reflect.GeneratedMethodAccessor1: <init>()
1.081640494584604 java.lang.ClassLoader$NativeLibrary: load(Ljava/lang/String;) ===> java.lang.System: load(Ljava/lang/String;)
1.486329851412132 java.lang.StringCoding$StringEncoder: <init>(Ljava/nio/charset/Charset;Ljava/lang/String;) ===> sun.nio.cs.UTF_8: newEncoder()
1.5079213065903845 sun.nio.cs.StreamEncoder: <init>(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;) ===> sun.nio.cs.UTF_8: newEncoder()
1.928227906275018 java.io.File: isAbsolute() ===> java.io.UnixFileSystem: isAbsolute(Ljava/io/File;)
1.9961574985127397 sun.reflect.NativeConstructorAccessorImpl: newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;) ===> org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: <clinit>()
1.9963345338261091 sun.reflect.NativeConstructorAccessorImpl: newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;) ===> org.apache.fop.image.loader.batik.PreloaderSVG: <clinit>()
1.996334533851375 sun.reflect.NativeConstructorAccessorImpl: newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;) ===> org.apache.fop.image.loader.batik.PreloaderWMF: <clinit>()
1.996335861350062 sun.reflect.NativeConstructorAccessorImpl: newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;) ===> org.apache.xmlgraphics.image.loader.impl.PreloaderEPS: <clinit>()
2.9931774335066375 java.io.File: delete() ===> java.io.UnixFileSystem: delete(Ljava/io/File;)
2.9943955450899193 java.nio.charset.CharsetDecoder: decode(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z) ===> sun.nio.cs.UTF_8$Decoder: decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
2.994405532892991 java.net.URL: <init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;) ===> sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
2.994405532905238 java.nio.charset.CharsetEncoder: encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z) ===> sun.nio.cs.UTF_8$Encoder: encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
3.986142481836792 java.lang.Object: <init>() ===> java.lang.ref.Finalizer: register(Ljava/lang/Object;)
8.979211730031658 java.io.File: getCanonicalPath() ===> java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
===========================================================================
Number of reachable methods missing in rechenknecht.cased.de/fop-small/CallGraph-static.gxl.gz: 76
===========================================================================
java.io.ExpiringCache$1: removeEldestEntry(Ljava/util/Map$Entry;)
java.io.ExpiringCache$Entry: <init>(JLjava/lang/String;)
java.io.ExpiringCache$Entry: timestamp()
java.io.ExpiringCache$Entry: val()
java.io.ExpiringCache: access$000(Ljava/io/ExpiringCache;)
java.io.ExpiringCache: clear()
java.io.ExpiringCache: entryFor(Ljava/lang/String;)
java.io.ExpiringCache: get(Ljava/lang/String;)
java.io.ExpiringCache: put(Ljava/lang/String;Ljava/lang/String;)
java.io.File: getPrefixLength()
java.io.FileNotFoundException: <init>(Ljava/lang/String;Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize(Ljava/lang/String;)
java.io.UnixFileSystem: canonicalize0(Ljava/lang/String;)
java.io.UnixFileSystem: compare(Ljava/io/File;Ljava/io/File;)
java.io.UnixFileSystem: createDirectory(Ljava/io/File;)
java.io.UnixFileSystem: delete(Ljava/io/File;)
java.io.UnixFileSystem: delete0(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes(Ljava/io/File;)
java.io.UnixFileSystem: getBooleanAttributes0(Ljava/io/File;)
java.io.UnixFileSystem: getLastModifiedTime(Ljava/io/File;)
java.io.UnixFileSystem: getLength(Ljava/io/File;)
java.io.UnixFileSystem: hashCode(Ljava/io/File;)
java.io.UnixFileSystem: isAbsolute(Ljava/io/File;)
java.io.UnixFileSystem: list(Ljava/io/File;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;)
java.io.UnixFileSystem: normalize(Ljava/lang/String;II)
java.io.UnixFileSystem: parentOrNull(Ljava/lang/String;)
java.io.UnixFileSystem: prefixLength(Ljava/lang/String;)
java.io.UnixFileSystem: resolve(Ljava/io/File;)
java.io.UnixFileSystem: resolve(Ljava/lang/String;Ljava/lang/String;)
java.lang.ClassLoader$NativeLibrary: getFromClass()
java.lang.Runtime: load0(Ljava/lang/Class;Ljava/lang/String;)
java.lang.System: load(Ljava/lang/String;)
java.lang.ref.FinalReference: <init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)
java.lang.ref.Finalizer: <init>(Ljava/lang/Object;)
java.lang.ref.Finalizer: add()
java.lang.ref.Finalizer: register(Ljava/lang/Object;)
java.net.URL: getUserInfo()
java.net.URLConnection: getUseCaches()
java.net.URLStreamHandler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: <clinit>()
org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: class$(Ljava/lang/String;)
org.apache.fop.image.loader.batik.PreloaderSVG: <clinit>()
org.apache.fop.image.loader.batik.PreloaderSVG: class$(Ljava/lang/String;)
org.apache.fop.image.loader.batik.PreloaderWMF: <clinit>()
org.apache.fop.image.loader.batik.PreloaderWMF: class$(Ljava/lang/String;)
org.apache.xmlgraphics.image.loader.impl.PreloaderEPS: <clinit>()
org.apache.xmlgraphics.image.loader.impl.PreloaderEPS: class$(Ljava/lang/String;)
sun.net.www.MessageHeader: <init>()
sun.net.www.MessageHeader: grow()
sun.net.www.URLConnection: <init>(Ljava/net/URL;)
sun.net.www.protocol.file.FileURLConnection: <clinit>()
sun.net.www.protocol.file.FileURLConnection: <init>(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.FileURLConnection: getPermission()
sun.net.www.protocol.file.Handler: createFileURLConnection(Ljava/net/URL;Ljava/io/File;)
sun.net.www.protocol.file.Handler: hostsEqual(Ljava/net/URL;Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;)
sun.net.www.protocol.file.Handler: openConnection(Ljava/net/URL;Ljava/net/Proxy;)
sun.net.www.protocol.file.Handler: parseURL(Ljava/net/URL;Ljava/lang/String;II)
sun.nio.cs.UTF_8$Decoder: <init>(Ljava/nio/charset/Charset;)
sun.nio.cs.UTF_8$Decoder: <init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)
sun.nio.cs.UTF_8$Decoder: decodeArrayLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
sun.nio.cs.UTF_8$Decoder: decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)
sun.nio.cs.UTF_8$Decoder: xflow(Ljava/nio/Buffer;IILjava/nio/Buffer;II)
sun.nio.cs.UTF_8$Encoder: <init>(Ljava/nio/charset/Charset;)
sun.nio.cs.UTF_8$Encoder: <init>(Ljava/nio/charset/Charset;Lsun/nio/cs/UTF_8$1;)
sun.nio.cs.UTF_8$Encoder: encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
sun.nio.cs.UTF_8$Encoder: encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)
sun.nio.cs.UTF_8$Encoder: isLegalReplacement([B)
sun.nio.cs.UTF_8: historicalName()
sun.nio.cs.UTF_8: newDecoder()
sun.nio.cs.UTF_8: newEncoder()
sun.nio.cs.UTF_8: updatePositions(Ljava/nio/Buffer;ILjava/nio/Buffer;I)
sun.reflect.GeneratedConstructorAccessor1: newInstance([Ljava/lang/Object;)
sun.reflect.GeneratedMethodAccessor1: <init>()
sun.reflect.GeneratedMethodAccessor1: invoke(Ljava/lang/Object;[Ljava/lang/Object;)
